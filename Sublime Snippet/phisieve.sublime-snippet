<snippet>
	<content><![CDATA[
const int MAX = 1000001;

vector<int> lp, primes, phi;
 
void generate_etf() {
	lp.resize(MAX);
	phi.rezize(MAX);
	lp[1] = phi[1] = 1;
	for (int i = 2; i < MAX; ++i) {
		if (!lp[i]) {
			lp[i] = i;
			phi[i] = i-1;
			primes.emplace_back(i);
		}
		for (int j = 0; j < primes.size(); ++j) {
			int x = i * primes[j];
			if (x >= MAX) break;
			lp[x] = primes[j];
			if (i % primes[j] == 0) {
				phi[x] = phi[i] * primes[j];
				break;
			}
			else {
				phi[x] = phi[i] * (primes[j]-1);
			}
		}
	}
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>phisieve</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.cpp, source.c++, source.c</scope>
	<!-- Optional: Description to show in the menu -->
	<description>Euler Totient Function Sieve</description>
</snippet>